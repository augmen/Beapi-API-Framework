---
grails:
    profile: web-plugin
    codegen:
        defaultPackage: grails.api.framework
info:
    app:
        name: api-framework
        version: 0.1.RC1
        grailsVersion: '@info.app.grailsVersion@'
spring:
    groovy:
        template:
            check-template-location: false

---
grails:
    mime:
        disable:
            accept:
                header:
                    userAgents:
                        - Gecko
                        - WebKit
                        - Presto
                        - Trident
        types:
            all: '*/*'
            atom: application/atom+xml
            css: text/css
            csv: text/csv
            form: application/x-www-form-urlencoded
            html: 
              - text/html
              - application/xhtml+xml
            js: text/javascript
            json:
              - application/json
              - text/json
            multipartForm: multipart/form-data
            rss: application/rss+xml
            text: text/plain
            hal: 
              - application/hal+json
              - application/hal+xml
            xml:
              - text/xml
              - application/xml
    urlmapping:
        cache:
            maxsize: 1000
    controllers:
        defaultScope: singleton
    converters:
        encoding: UTF-8
    views:
        default:
            codec: html
        gsp:
            encoding: UTF-8
            htmlcodec: xml
            codecs:
                expression: html
                scriptlets: html
                taglib: none
                staticparts: none
config:
    cache:
        name: 'ApiCache'
        eternal: false
        overflowToDisk: true
        maxElementsInMemory: 10000
        maxElementsOnDisk: 10000000

---
apitoolkit:
    apiName: api
    attempts: 5
    roles: ['ROLE_USER','ROLE_ROOT','ROLE_ADMIN','ROLE_ARCH']
    apichain:
        limit:3
    rest:
        postcrement: false
    chaining:
        enabled: true
    batching:
        enabled: true
    encoding: UTF-8
    user:
        roles: ['ROLE_USER']
    admin:
        roles: ['ROLE_ROOT','ROLE_ADMIN','ROLE_ARCH']
    serverType: master
    webhook:
        services: {iostate}
    iostate:
        preloadDir: /home/owenrubel/.iostate
        archInstanceUrls:
            proxy: '127.0.0.1'
            mq: '127.0.0.1'
    corsInterceptor:
        includeEnvironments: {'development','test'}
        excludeEnvironments: {'production'}
        allowedOrigins: {'localhost:3000'}

