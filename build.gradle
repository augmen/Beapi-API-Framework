buildscript {
    ext {
        grailsVersion = '3.1.1'
        //grailsVersion = project.grailsVersion
    }
    repositories {
        mavenCentral()
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath 'org.grails.plugins:hibernate:4.3.10.6'
    }
}

plugins {
    id "io.spring.dependency-management" version "0.5.2.RELEASE"
    id "com.jfrog.bintray" version "1.2"
}

version "0.2.1.2"
group "org.grails.plugins"


apply plugin: "maven-publish"
apply plugin: "spring-boot"
//apply plugin: "org.grails.grails-plugin"
// Used for publishing to central repository, remove if not needed
apply plugin: "org.grails.grails-plugin"
apply plugin: "org.grails.grails-plugin-publish"

grailsPublish {
    userOrg = 'nosegrind' // Optional
    githubSlug = 'orubel/api-framework'
    license {
        name = 'MIT'
    }
    title = "Boomstick API Framework"
    desc = "Boomstick API Framework is a fully reactive plug-n-play API Framework for Distributed Architectures providing api abstraction, cached IO state, automated batching and more. It is meant to autmoate alot of the issues behind setting up and maintaining API's in distributed architectures as well as handling and simplifying automation."
    developers = [orubel:"Owen Rubel"]
}

ext {
    grailsVersion = '3.1.1'
    gradleWrapperVersion = project.gradleWrapperVersion
}

sourceCompatibility = 1.8
targetCompatibility = 1.8


repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    compile 'org.grails.plugins:cache:3.0.2'
    compile 'org.springframework.boot:spring-boot-starter-logging'
    compile 'org.springframework.boot:spring-boot-autoconfigure'
    provided 'org.springframework.boot:spring-boot-starter-tomcat'
    compile('org.grails.plugins:spring-security-core:3.0.3') {
        exclude(module: 'org.springframework.security:spring-security-web')
    }

    compile('org.grails.plugins:spring-security-rest:2.0.0.M2') {
        exclude(module: 'com.google.guava:guava-io')
        exclude(module: 'org.springframework.security:spring-security-web')
    }
    compile('org.grails:grails-web'){
        exclude(module: 'org.grails:grails-web-jsp')
        exclude(module:'org.grails:grails-web-sitemesh')
        exclude(module:'org.grails:grails-web-gsp')
    }
    compile('org.grails:grails-dependencies'){
        exclude(module:'grails-plugin-rest')
        exclude(module:'grails-bootstrap')
        exclude(module:'grails-plugin-gsp')
    }
    compile('org.grails:grails-logging:3.1.1')
    compile('org.codehaus.groovy:groovy-ant:2.4.5')

    //compile "org.grails.plugins:hibernate"
    compile 'org.grails.plugins:hibernate:4.3.10.6'
    compile "org.hibernate:hibernate-ehcache"

    //testCompile "org.grails:grails-plugin-testing"
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}

bootRun {
    systemProperties = System.properties
}

test {
    systemProperties = System.properties
}
